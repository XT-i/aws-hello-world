{
    "Description": "Infrastructure for ECS scaling demo.",
    "Mappings": {
        "RegionMap": {
            "eu-west-1": {
                "AMI": "ami-03238b70"
            },
            "us-east-1": {
                "AMI": "ami-2b3b6041"
            }
        }
    },
    "Outputs": {
        "QueueARN": {
            "Description": "ARN of newly created SQS Queue",
            "Value": {
                "Fn::GetAtt": [
                    "MyQueue",
                    "Arn"
                ]
            }
        },
        "QueueName": {
            "Description": "Name newly created SQS Queue",
            "Value": {
                "Fn::GetAtt": [
                    "MyQueue",
                    "QueueName"
                ]
            }
        },
        "QueueURL": {
            "Description": "URL of newly created SQS Queue",
            "Value": {
                "Ref": "MyQueue"
            }
        },
        "ecscluster": {
            "Value": {
                "Ref": "mycluster"
            }
        },
        "ecsservice": {
            "Value": {
                "Ref": "ECSService"
            }
        },
        "taskdef": {
            "Value": {
                "Ref": "TaskDefinition"
            }
        }
    },
    "Parameters": {
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SubnetId": {
            "Type": "List<AWS::EC2::Subnet::Id>"
        }
    },
    "Resources": {
        "AlarmTopic": {
            "Type": "AWS::SNS::Topic"
        },
        "AutoScalingGroup": {
            "Properties": {
                "DesiredCapacity": "1",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MaxSize": "1",
                "MinSize": "1",
                "VPCZoneIdentifier": {
                    "Ref": "SubnetId"
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "ECSService": {
            "DependsOn": [
                "AutoScalingGroup"
            ],
            "Properties": {
                "Cluster": {
                    "Ref": "mycluster"
                },
                "DesiredCount": "1",
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "InstanceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ecs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "ecr:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "ecs-service"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "LambdaExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "root"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "LaunchConfiguration": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "add_instance": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n sudo /bin/su -c 'echo ECS_CLUSTER=",
                                            {
                                                "Ref": "mycluster"
                                            },
                                            " >> /etc/ecs/ecs.config'"
                                        ]
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\nstack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\nregion=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "--resource ContainerInstances --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\nrunas=root\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                " /opt/aws/bin/cfn-init -v ",
                                "    --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "    --resource LaunchConfiguration    --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "    --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "    --resource AutoScalingGroup    --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "MyQueue": {
            "Type": "AWS::SQS::Queue"
        },
        "ScalingLambda": {
            "Properties": {
                "Code": {
                    "S3Bucket": "demo-xti",
                    "S3Key": "scaler-0.0.1-SNAPSHOT.jar"
                },
                "Handler": "com.xti.awspresentation.demo.scaler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "java8",
                "Timeout": 30
            },
            "Type": "AWS::Lambda::Function"
        },
        "TaskDefinition": {
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Cpu": "10",
                        "Environment": [
                            {
                                "Name": "REGION",
                                "Value": "us-east-1"
                            },
                            {
                                "Name": "SQS_URL",
                                "Value": {
                                    "Ref": "MyQueue"
                                }
                            }
                        ],
                        "Essential": "true",
                        "Image": "335317431711.dkr.ecr.us-east-1.amazonaws.com/demo:latest",
                        "Memory": "100",
                        "Name": "demo-test-cont-def2"
                    }
                ],
                "Volumes": []
            },
            "Type": "AWS::ECS::TaskDefinition"
        },
        "mycluster": {
            "Type": "AWS::ECS::Cluster"
        }
    }
}
